//Import section
import {
  USER_ADD_REQUEST,
  USER_ADD_SUCCESS,
  USER_ADD_FAILURE,

  // Read constants not generated

  // List constants not generated

  // Update constants not generated

  // Deleted constants not generated

  SET_STATE,
} from 'examples/code-example/with-specific-reducers/constants/';

import InitialState from 'examples/code-example/with-specific-reducers/states//user-state';

// Main reducer function
export default function usersReducer(state = InitialState, action) {
  switch (action.type) {
    case USER_ADD_REQUEST:
    {
      return {
        ...state,
        isFetching: true,
        error: null,
      };
    }

    case USER_ADD_SUCCESS:
    {
      return {
        ...state,
        isFetching: false,
        users: null,
        success: true,
      };
    }

    case USER_ADD_FAILURE:
    {
      return {
        ...state,
        isFetching: false,
        error: action.payload,
        success: null,
      };
    }

    // Read case not generated

    // List case not generated

    // Update case not generated

    // Delete case not generated

    case SET_STATE:
    {
      const {
        users
      } = JSON.parse(action.payload);

      return {
        ...state,
        disabled: users.disabled,
        error: users.disabled,
        isValid: users.isValid,
        isFetching: users.isFetching,
        users: users.users
      };
    }

    default:
    {
      return state;
    }
  }
}
// This file was autogenerated by reducer-maker
